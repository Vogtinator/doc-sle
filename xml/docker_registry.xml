<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xml:id="cha.registry.installation" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.0"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Configuring Image Storage</title>
 <para>
  Prior to creating your own images, you should decide where you want to store
  the images. The easiest solution is to push these images to the
  <link xlink:href="https://hub.docker.com">&dhub;</link>. By default, all
  images pushed to the &dhub; are public. This is probably fine as long as
  this does not violate your company's policy and your images do not contain
  sensitive data or proprietary software.
 </para>
 <para>
  If you need to restrict access to your &docker; images, there are the following options:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    <!-- Are we really advertising the services of some unaffiliated third
    party? - sknorr, 2017-12-07 -->
    Get a subscription on &dhub; that unlocks the feature to create private
    repositories.
   </para>
  </listitem>
  <listitem>
   <para>
    Run an on-site &dreg; where to store all the &docker; images used by
    your organization or company and combine them with Portus to secure the
    registry.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  This chapter describes how to set up an on-site &dreg; and how to
  combine it with Portus.
 </para>

 <sect1 xml:id="sec.docker.registry.installation">
  <title>Installing and Setting Up &dreg;</title>

  <procedure>
   <step>
    <para>
     Install the <systemitem>docker-distribution-registry</systemitem> package:
    </para>
    <screen>&prompt.sudo;zypper install docker-distribution-registry</screen>
   </step>
   <step>
    <para>
     To automatically start the &dreg; at boot time:
    </para>
    <screen>&prompt.sudo;systemctl enable registry</screen>
   </step>
   <step>
    <para>
     Start the &dreg;:
    </para>
    <screen>&prompt.sudo;systemctl start registry</screen>
   </step>
  </procedure>

  <para>
   The &dreg; configuration is defined inside of
   <filename>/etc/registry/config.yml</filename>.
  </para>

  <para>
   With the default configuration the registry listens on ports
   <literal>5000</literal> and stores the &docker; images under
   <filename>/var/lib/docker-registry</filename>.
  </para>

  <note>
   <title>Incompatible Versions of &deng; and &dreg;</title>
   <para>
    &dreg; 2.3 is not compatible with &deng; versions older
    than 1.10, because v2 manifests were only introduced with &deng; 1.10. As
    &deng; and &dreg; can be installed on different boxes, the
    versions might be incompatible. If you experience communication errors
    between &deng; and &dreg;, update both to the latest versions.
   </para>
  </note>

  <!--
      fcastelli 2015-07-08: TODO: update once we create a TID illustrating the secure setup of
      Docker registry and Portus.
     -->

  <para>
   For more details about &dreg; and its configuration, see the
   official documentation at:
   <link xlink:href="https://docs.docker.com/registry/"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec.docker.portus">
  <title>Portus</title>

  <para>
   Portus is an authentication service and user interface for the &dreg;.
   It is an open source project created by &suse; to address all the
   limitations faced by the local instances of &dreg;.
   By combining Portus and &dreg;, it is possible to have a secure and
   enterprise ready on-premise version of the &dhub;.
  </para>

  <para>
   Portus is available for &productname; customers as a &docker; image from
   &suse; Container Registry. For example, to pull the <literal>2.4.0</literal>
   tag of the &productname; 12 image, run the following command:
  </para>

  <screen>&prompt.user;docker pull registry.suse.com/sles12/portus:2.4.0</screen>

  <para>
   In addition to the official version of the Portus image from
   &suse; Container Registry, there is a community version that can be found
   on &dhub;. However, as a &productname; customer, we strongly suggest you use
   the official Portus image instead.
   The Portus image for &productname; customers has the same code as the one
   from the community. Therefore, the setup instructions from 
   <link xlink:href="http://port.us.org/docs/deploy.html"/>
   apply for both images.
  </para>
 </sect1>
</chapter>
